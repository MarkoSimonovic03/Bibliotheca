@model Bibliotheca.Models.ViewModels.LoansViewModel

@{
	ViewData["Title"] = "Your loans";
}

<section>
	<div class="bg-home-wrapper">
		<div class="bg-home-overlay">
			<div class="container px-5">
				<h1 class="text-white display-1 text-center my-5">Your Loans</h1>
				<form method="get" asp-action="UserLoans" class="searchbar-custom searchbar-short row">
					<div class="col-sm-5 mt-3 mt-sm-0 px-4 px-sm-3 d-flex justify-content-center align-items-center">
						<input type="date" class="input-custom px-1" name="loanDate" id="loanDate" value="@Context.Request.Query["loanDate"]" />
					</div>

					<div class="col-sm-7 my-3 px-4 px-sm-2 d-flex justify-content-between align-items-center">
						<div class="dropdown">
							<button class="dropdown-toggle btn-dropdown" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
								Categories
							</button>

							<div class="dropdown-menu py-2 px-4" aria-labelledby="dropdownMenuButton1">
								@foreach (var status in Enum.GetValues(typeof(Bibliotheca.Models.enums.LoanStatus)))
								{
									<div class="form-check form-check-inline">
										<input class="form-check-input cursor-pointer" type="checkbox" name="LoanStatus" value="@status" id="@status"
										@if (Context.Request.Query["LoanStatus"].ToString().Contains(status.ToString()))
										{
											<text>checked</text>
										} />
										<label class="form-check-label" for="@status">
											@status
										</label>
									</div>
								}
							</div>
						</div>
						<button type="submit" class="btn-custom btn-search">Search</button>
					</div>
				</form>
			</div>
		</div>
	</div>
</section>

<section class="pt-5">
	<div class="container p-5">
		@if (Model.Loans.Any())
		{
			<div class="row">
				<div class="col-10 offset-1 col-sm-12 offset-sm-0 col-md-10 offset-md-1 col-lg-8 offset-lg-2 col-xl-6 offset-xl-3">
					@foreach (var loan in Model.Loans)
					{
						<div class="mb-5 mb-sm-4 p-5 p-sm-4 position-relative">
							<div class="loan-card-bg"></div>
							<div class="loan-card-bg2"></div>
							@{
								var img = loan.Book.ImageUrl == null || loan.Book.ImageUrl == "" ? "book-placeholder.jpg" : loan.Book.ImageUrl;
							}

							<div class="row">
								<div class="col-sm-5 col-md-4">
									<a href="@Url.Action("Details","Book", new{ id = loan.BookId})">
										<img src="~/images/books/@img" alt="Book - @loan.Book.Title" class="loan-card-img" />
									</a>
								</div>
								<div class="col-sm-7 col-md-8 mt-4 mt-sm-0">
									<h3>@loan.Book.Title</h3>

									<p>
										@{
											var bg = loan.LoanStatus == Bibliotheca.Models.enums.LoanStatus.InProgress ? "text-primary" : loan.LoanStatus == Bibliotheca.Models.enums.LoanStatus.Returned ? "text-success" : "text-danger";
										}
										<strong>Loan date:</strong> @loan.LoanDate<br />
										<strong>Due Date:</strong> @loan.DueDate<br />
										<strong>Status:</strong> <span class="@bg fw-bold">@loan.LoanStatus</span><br />
									</p>

									@if (loan.LoanStatus != Bibliotheca.Models.enums.LoanStatus.Returned)
									{
										<form asp-action="ReturnUserLoan" method="post">
											<input value="@loan.Id" name="id" type="hidden" />
											<button type="submit" class="btn-custom">Return</button>
										</form>
									}
								</div>
							</div>
						</div>
					}
				</div>
			</div>
		}
		else
		{
			<p class="fs-2 py-5 text-white">There are currently no loans for this search.</p>
		}
	</div>
</section>

@Html.Partial("_Pagination", Model.Pagination)