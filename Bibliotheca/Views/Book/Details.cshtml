@model Bibliotheca.Models.ViewModels.BookDetailViewModel

@{
	ViewData["Title"] = "Bilbiotheca";
}

<section>
	<div class="bg-home-wrapper">
		<div class="bg-home-overlay">
			<div class="container px-5">
				<h1 class="text-white display-1">@Model.Book.Title</h1>
			</div>
		</div>
	</div>
</section>

<section>
	<div class="container p-5 text-white fw-lighter">
		<div class="row g-5">
			<div class="col-md-5 col-lg-3">
				@{
					var img = Model.Book.ImageUrl == null || Model.Book.ImageUrl == "" ? "book-placeholder.jpg" : Model.Book.ImageUrl;
				}	
				<img src="~/images/books/@img" alt="Book - @Model.Book.Title" class="details-img" />

				<div class="d-none d-md-block d-lg-none pt-5">
					@if (Model.Book.Reviews.Any())
					{
						<div class="details-box p-3 fs-5 mb-4">
							<h3 class="fw-light">Average Rating</h3>
							<div class="underline-custom mb-4"></div>

							<h3 class="fw-bold">
								@Model.AverageRating.ToString("0.0")
							</h3>

							@for (int i = 0; i < (int)Model.AverageRating; i++)
							{
								<i class="fas fa-star"></i>
							}

							@if (Model.AverageRating != (int)Model.AverageRating)
							{
								@if (Model.AverageRating <= (int)Model.AverageRating + 0.2)
								{
									<i class="far fa-star"></i>
								}
								else if (Model.AverageRating <= (int)Model.AverageRating + 0.8)
								{
									<i class="fas fa-star-half-alt"></i>
								}
								else
								{
									<i class="fas fa-star"></i>
								}

								@for (int i = (int)Model.AverageRating + 1; i < 5; i++)
								{
									<i class="far fa-star"></i>
								}
							}
							else
							{
								@for (int i = (int)Model.AverageRating + 1; i <= 5; i++)
								{
									<i class="far fa-star"></i>
								}
							}

							<p>@Model.Book.Reviews.Count() Reviews</p>
						</div>
					}
					<div class="details-box p-3 fs-5">
						<div class="d-flex justify-content-between align-items-start">
							<h3 class="fw-light">Book Details</h3>

							@if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
							{
								<div class="dropdown">
									<button class="btn-custom btn-dd dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false"></button>
									<ul class="dropdown-menu details-dd-menu" aria-labelledby="dropdownMenuButton1">
										<li><a href="@Url.Action("Edit","Book", new{ id = @Model.Book.Id})" class="dropdown-item fs-5 text-end">Edit</a></li>
										<li>
											<form asp-action="Delete" method="post">
												<input name="id" value="@Model.Book.Id" type="hidden" />
												<button type="submit" class="dropdown-item fs-5 text-end">Delete</button>
											</form>
										</li>
									</ul>
								</div>
							}
						</div>
						<div class="underline-custom mb-4"></div>
						<p>Author: <span class="fw-bold">@Model.Book.Author</span></p>
						<p>Publisher: <span class="fw-bold">@Model.Book.Publisher</span></p>
						<p>Year of publication: <span class="fw-bold">@Model.Book.YearOfPublication</span></p>
						<p>Number of pages: <span class="fw-bold">@Model.Book.NumberOfPages</span></p>
						<p>Available quantity: <span class="fw-bold">@Model.Book.AvailableQuantity</span></p>
						@if (Model.Book.AvailableQuantity > 0)
						{
							@if (User.Identity.IsAuthenticated)
							{
								<form asp-controller="Loan" asp-action="Create" method="post">
									<input name="id" value="@Model.Book.Id" type="hidden" />
									<button type="submit" class="btn-custom">Borrow a Book</button>
								</form>
							}
							else
							{
								<div class="underline-custom mb-2"></div>
								<p>Log in to the application to borrow a book.</p>
							}
						}
						else
						{
							<div class="underline-custom mb-2"></div>
							<p>Sorry, you can't borrow the book. It is currently out of stock.</p>
						}
					</div>
				</div>
			</div>

			<div class="col-md-7 col-lg-5 col-xl-6">
				<h2 class="pb-4 display-4">Summary</h2>
				<p class="fw-light summary-text fs-5" id="summaryText">
					@Model.Book.Summary
				</p>
				<button id="readMore" class="btn-custom read-more fs-5 px-3">Read more...</button>
			</div>

			<div class="d-block d-md-none d-lg-block col-lg-4 col-xl-3">
				@if (Model.Book.Reviews.Any())
				{
					<div class="details-box p-3 fs-5 mb-4">
						<h3 class="fw-light">Average Rating</h3>
						<div class="underline-custom mb-4"></div>

						<h3 class="fw-bold">
							@Model.AverageRating.ToString("0.0")
						</h3>

						@for (int i = 0; i < (int)Model.AverageRating; i++)
						{
							<i class="fas fa-star"></i>
						}

						@if (Model.AverageRating != (int)Model.AverageRating)
						{
							@if (Model.AverageRating <= (int)Model.AverageRating + 0.2)
							{
								<i class="far fa-star"></i>
							}
							else if (Model.AverageRating <= (int)Model.AverageRating + 0.8)
							{
								<i class="fas fa-star-half-alt"></i>
							}
							else
							{
								<i class="fas fa-star"></i>
							}

							@for (int i = (int)Model.AverageRating + 1; i < 5; i++)
							{
								<i class="far fa-star"></i>
							}
						}
						else
						{
							@for (int i = (int)Model.AverageRating + 1; i <= 5; i++)
							{
								<i class="far fa-star"></i>
							}
						}

						<p>@Model.Book.Reviews.Count() Reviews</p>
					</div>
				}
				<div class="details-box p-3 fs-5">
					<div class="d-flex justify-content-between align-items-start">
						<h3 class="fw-light">Book Details</h3>

						@if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
						{
							<div class="dropdown">
								<button class="btn-custom btn-dd dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false"></button>
								<ul class="dropdown-menu details-dd-menu" aria-labelledby="dropdownMenuButton1">
									<li><a href="@Url.Action("Edit","Book", new{ id = @Model.Book.Id})" class="dropdown-item fs-5 text-end">Edit</a></li>
									<li>
										<form asp-action="Delete" method="post">
											<input name="id" value="@Model.Book.Id" type="hidden" />
											<button type="submit" class="dropdown-item fs-5 text-end">Delete</button>
										</form>
									</li>
								</ul>
							</div>
						}
					</div>
					<div class="underline-custom mb-4"></div>
					<p>Author: <span class="fw-bold">@Model.Book.Author</span></p>
					<p>Publisher: <span class="fw-bold">@Model.Book.Publisher</span></p>
					<p>Year of publication: <span class="fw-bold">@Model.Book.YearOfPublication</span></p>
					<p>Number of pages: <span class="fw-bold">@Model.Book.NumberOfPages</span></p>
					<p>Available quantity: <span class="fw-bold">@Model.Book.AvailableQuantity</span></p>
					@if (Model.Book.AvailableQuantity > 0)
					{
						@if (User.Identity.IsAuthenticated)
						{
							<form asp-controller="Loan" asp-action="Create" method="post">
								<input name="id" value="@Model.Book.Id" type="hidden" />
								<button type="submit" class="btn-custom">Borrow a Book</button>
							</form>
						}
						else
						{
							<div class="underline-custom mb-2"></div>
							<p>Log in to the application to borrow a book.</p>
						}
					}
					else
					{
						<div class="underline-custom mb-2"></div>
						<p>Sorry, you can't borrow the book. It is currently out of stock.</p>
					}
				</div>
			</div>

		</div>
	</div>
</section>

@if (User.Identity.IsAuthenticated)
{
	<section>
		<div class="container p-5 text-white fw-lighter">
			<div class="row">
				<div class="col-lg-6 offset-lg-3">
					<form asp-action="Review" method="post">
						<h2 class="display-4">Write a Review</h2>

						<input name="BookId" value="@Model.Book.Id" type="hidden" />

						<div class="form-group mb-3">
							<div class="d-flex gap-2">
								<input name="Rating" type="radio" class="star-input d-none" value="1" id="star1" required />
								<label class="fs-2 cursor-pointer" for="star1"><i id="s1" data-rating="1" class="far fa-star star"></i></label>

								<input name="Rating" type="radio" class="star-input d-none" value="2" id="star2" />
								<label class="fs-2 cursor-pointer" for="star2"><i id="s2" data-rating="2" class="far fa-star star"></i></label>

								<input name="Rating" type="radio" class="star-input d-none" value="3" id="star3" />
								<label class="fs-2 cursor-pointer" for="star3"><i id="s3" data-rating="3" class="far fa-star star"></i></label>

								<input name="Rating" type="radio" class="star-input d-none" value="4" id="star4" />
								<label class="fs-2 cursor-pointer" for="star4"><i id="s4" data-rating="4" class="far fa-star star"></i></label>

								<input name="Rating" type="radio" class="star-input d-none" value="5" id="star5" />
								<label class="fs-2 cursor-pointer" for="star5"><i id="s5" data-rating="5" class="far fa-star star"></i></label>
							</div>
						</div>

						<div class="form-group mb-3">
							<textarea name="Text" id="text" class="form-control" rows="3" maxlength="300" placeholder="What did you like or dislike about this book?" required></textarea>
						</div>

						<button type="submit" class="btn-custom fs-5">Submit Review</button>
					</form>
				</div>
			</div>
	</section>
}

@if (Model.Book.Reviews.Any())
{
	<section>
		<div class="container p-5 text-white fw-lighter">
			<div class="row">
				<div class="col-lg-6 offset-lg-3">

					<h2 class="pb-3 display-4">Reviews</h2>
					@foreach (var review in Model.Book.Reviews)
					{
						<div class="review-box p-3 mb-3">
							<div class="d-flex justify-content-between align-items-center">
								<p class="fw-bold mb-0">@review.User.Name</p>

								<p class="mb-0">@review.CreatedAt.ToString("dd.MM.yyyy.")</p>

							</div>

							<div class="d-flex justify-content-between align-items-start">
								<div class="mb-2">
									@for (int i = 0; i < review.Rating; i++)
									{
										<i class="fas fa-star"></i>
									}
									@for (int i = review.Rating; i < 5; i++)
									{
										<i class="far fa-star"></i>
									}
								</div>
								@if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
								{
									<form asp-action="DeleteReview" method="post">
										<input name="reviewId" value="@review.Id" type="hidden" />
										<input name="bookId" value="@Model.Book.Id" type="hidden" />
										<button type="submit" class="btn-custom mt-2">Delete</button>
									</form>
								}

							</div>
							<p class="mb-0">@review.Text</p>
						</div>
					}

					@if (Model.Book.Reviews.Count() > 3)
					{
						<button id="viewMoreReviews" class="btn-custom fs-5">View more reviews...</button>
					}
				</div>
			</div>
		</div>
	</section>
}


@section Scripts {
	<script>
		var summaryText = document.getElementById("summaryText");
		var readMore = document.getElementById("readMore");

		if (!(summaryText.scrollHeight > summaryText.clientHeight)) {
			readMore.style.display = "none";
		}

		readMore.addEventListener("click", function () {
			summaryText.classList.toggle("summary-text-expanded");

			if (text.classList.contains("summary-text-expanded")) {
				this.textContent = "Read less...";
			} else {
				this.textContent = "Read more...";
			}
		});



		const starInputs = document.querySelectorAll('.star-input');
		const stars = document.querySelectorAll('.star');

		starInputs.forEach(starInput => {
			starInput.addEventListener("click", function () {
				stars.forEach(star => {
					if (starInput.value >= star.dataset.rating) {
						star.className = "fas fa-star star";
					}
					else {
						star.className = "far fa-star star";
					}
				});
			});
		});



		var reviews = document.querySelectorAll(".review-box");
		var viewMoreReviews = document.getElementById("viewMoreReviews")
		var expanded = false;

		reviews.forEach((review, index) => {
			if (index >= 3) {
				review.style.display = 'none';
			}
		});

		if (viewMoreReviews) {
			viewMoreReviews.addEventListener("click", function () {
				if (expanded) {
					reviews.forEach((review, index) => {
						if (index >= 3) {
							review.style.display = 'none';
						}
					});
					this.textContent = "View more reviews...";
					expanded = false;
				} else {
					reviews.forEach((review, index) => {
						review.style.display = 'block';
					});
					this.textContent = "View less reviews...";
					expanded = true;
				}
			});
		}
	</script>
}