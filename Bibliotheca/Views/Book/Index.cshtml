@model Bibliotheca.Models.ViewModels.BookIndexViewModel

@{
	ViewData["Title"] = "Bilbiotheca";
}

<section>
	<div class="bg-home-wrapper">
		<div class="bg-home-overlay">
			<div class="container px-5">
				<h1 class="text-white display-1 text-center my-5">Bibliotheca</h1>
				<form method="get" asp-controller="Book" asp-action="Index" class="searchbar-custom row">
					<div class="col-sm-3 col-md-4 my-3 px-4 px-sm-1 d-flex justify-content-center align-items-center">
						<input class="input-custom" type="text" name="title" id="title" value="@Context.Request.Query["title"]" placeholder="Title..." />
					</div>

					<div class="col-sm-3 col-md-4 px-4 px-sm-0 d-flex justify-content-center align-items-center">
						<input class="input-custom" type="text" name="author" id="author" value="@Context.Request.Query["author"]" placeholder="Author..." />
					</div>

					<div class="col-sm-6 col-md-4 my-3 px-4 px-sm-2 d-flex justify-content-between align-items-center">
						<div class="dropdown">
							<button class="dropdown-toggle btn-dropdown" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
								Categories
							</button>

							<div class="dropdown-menu categories-dd-menu py-2 px-4" aria-labelledby="dropdownMenuButton1">
								@foreach (var category in Model.Categories)
								{
									<div class="form-check form-check-inline">
										<input class="form-check-input cursor-pointer" type="checkbox" name="Categories" value="@category.Name" id="category_@category.Name"
										@if (Context.Request.Query["Categories"].ToString().Contains(category.Name))
										{
											<text>checked</text>
										} />
										<label class="form-check-label" for="category_@category.Name">
											@category.Name
										</label>
									</div>
								}
							</div>
						</div>
						<button type="submit" class="btn-custom btn-search">Search</button>
					</div>
				</form>
			</div>
		</div>
	</div>
</section>

<section class="pt-5">
	<div class="container p-5 text-white">
		@if (Model.Books.Any())
		{
			<h2 class="display-3 mb-5">Available Books</h2>
			<div class="row g-5">
				@foreach (var book in Model.Books)
				{
					<div class="col-10 offset-1 col-sm-8 offset-sm-2 col-md-6 offset-md-0 col-lg-4 col-xxl-3">
						<div class="fw-light">
							<div class="book-card-wrapper">
								@{
									var img = book.ImageUrl == null || book.ImageUrl == "" ? "book-placeholder.jpg" : book.ImageUrl;
								}
								<img src="~/images/books/@img" alt="Book - @book.Title" class="book-card-img" />
								<div class="book-card-overlay d-flex flex-column justify-content-center align-items-center">
									<a href="@Url.Action("Details","Book", new{ id = book.Id})" class="btn-custom fs-4">View details</a>
								</div>
							</div>
							<div class="fs-3 px-2 text-center">@book.Title</div>
						</div>
					</div>
				}
			</div>
		}
		else
		{
			<p class="fs-2 py-5">There are no available books matching this search.</p>
		}
	</div>
</section>

@Html.Partial("_Pagination", Model.Pagination)